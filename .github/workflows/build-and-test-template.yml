# These jobs definitions are referenced and used by the other prefill projects
name: 'build-test-dotnet'
on:
  workflow_call:
    inputs:
      # Name of the project being build.  E.g BattlenetPrefill/EpicPrefill/SteamPrefill
      PROJECT_NAME:
          required: true
          type: string
      # Can be used to filter out certain tests/namespaces from the dotnet test run
      DOTNET_TEST_FILTER:
          required: false
          type: string

jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: dotnet format --verify-no-changes

  build-test:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: dotnet restore
    - run: dotnet build --no-restore -c Release /p:TreatWarningsAsErrors=true
    - run: dotnet test --no-restore -c Release /p:WarningLevel=0 --filter "${{inputs.DOTNET_TEST_FILTER}}"

  publish:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    strategy:
      matrix:
        runtime: ['win-x64', 'linux-x64']
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    # Gets the executable version that will be used later in the uploaded zip file name
    - name: Set Version
      id: vars
      run: |
        version=$(grep -Po '(?<=<VersionPrefix>)(.*?)(?=</VersionPrefix>)' ${{inputs.PROJECT_NAME}}/${{inputs.PROJECT_NAME}}.csproj); 
        echo "version=$version" >> $GITHUB_OUTPUT;
        suffix=$(date +"%-m%d%H%M");
        echo "suffix=$suffix" >> $GITHUB_OUTPUT
    - run: apt-get update
    - run: apt-get install zip -y
    - name: Publish 
      run: >
        version=${{ steps.vars.outputs.version }}
        suffix=${{ steps.vars.outputs.suffix }}

        dotnet publish ${{inputs.PROJECT_NAME}}/${{inputs.PROJECT_NAME}}.csproj \
          --nologo \
          --version-suffix $suffix \
          -o "publish/${{inputs.PROJECT_NAME}}-$version-$suffix-${{ matrix.runtime }}" \
          -c Release \
          --runtime "${{ matrix.runtime }}" \
          --self-contained true \
          /p:PublishSingleFile=true \
          /p:PublishTrimmed=true; 

        cd publish;
        zip -r ${{inputs.PROJECT_NAME}}-$version-$suffix-${{ matrix.runtime }}.zip ${{inputs.PROJECT_NAME}}-$version-$suffix-${{ matrix.runtime }};
        cp ${{inputs.PROJECT_NAME}}-$version-$suffix-${{ matrix.runtime }}.zip ../;
        rm ${{inputs.PROJECT_NAME}}-$version-$suffix-${{ matrix.runtime }}.zip;
        cd ..;
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{inputs.PROJECT_NAME}}-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.suffix }}-${{ matrix.runtime }} 
        path: publish/
        if-no-files-found: error 